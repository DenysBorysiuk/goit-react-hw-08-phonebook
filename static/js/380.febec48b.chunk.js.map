{"version":3,"file":"static/js/380.febec48b.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormWrap = styled(Form)`\n  margin: 20px auto;\n  padding: 20px;\n  max-width: 300px;\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.boxShadow.In};\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n  padding-bottom: 8px;\n\n  font-size: 18px;\n  font-weight: 500;\n  cursor: pointer;\n\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.boxShadow.Out};\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-top: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 10px;\n  width: 80%;\n\n  background-color: transparent;\n  outline: none;\n\n  border: none;\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.boxShadow.In};\n\n  &::placeholder {\n    text-align: center;\n  }\n\n  &:hover,\n  &:focus {\n    box-shadow: ${props => props.theme.boxShadow.Out};\n  }\n`;\n\nexport const Message = styled(ErrorMessage)`\n  position: absolute;\n  top: 65px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100%;\n  font-size: 11px;\n`;\n\nexport const FormBtn = styled.button`\n  display: inline-flex;\n  padding: 8px 24px;\n\n  font-size: 18px;\n  font-weight: 500;\n  background-color: transparent;\n  cursor: pointer;\n\n  border: none;\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.boxShadow.Out};\n\n  &:active {\n    box-shadow: ${props => props.theme.boxShadow.In};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { FormWrap, Input, Message, Label, FormBtn } from './ContactForm.styled';\nimport { BsPersonPlusFill } from 'react-icons/bs';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required()\n    .trim()\n    .max(12, 'must be max 12 characters long')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    ),\n  number: yup\n    .string()\n    .required()\n    .trim()\n    .max(12, 'must be max 12 characters long')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      contacts.find(\n        option => option.name.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      return alert(`${values.name} is already in contacts`);\n    }\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormWrap autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" placeholder=\"Enter contact name\" />\n          <Message name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" placeholder=\"Enter contact number\" />\n          <Message name=\"number\" component=\"div\" />\n        </Label>\n        <FormBtn type=\"submit\">\n          <BsPersonPlusFill />\n          &nbsp; Add contact\n        </FormBtn>\n      </FormWrap>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin: 20px auto;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  max-width: 50%;\n  font-size: 18px;\n  font-weight: 500;\n  cursor: pointer;\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.boxShadow.Out};\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 4px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 8px 10px;\n  width: 80%;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.boxShadow.In};\n\n  &::placeholder {\n    text-align: center;\n  }\n\n  &:hover,\n  &:focus {\n    box-shadow: ${props => props.theme.boxShadow.Out};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filtersSlice';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = evt => {\n    dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        onChange={onChangeFilter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  padding: 4px 8px;\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.boxShadow.Out};\n`;\n\nexport const ContactText = styled.span`\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n`;\n\nexport const ContactBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  background-color: transparent;\n  cursor: pointer;\n\n  border: none;\n  border-radius: 50px;\n  box-shadow: ${props => props.theme.boxShadow.Out};\n\n  &:active {\n    box-shadow: ${props => props.theme.boxShadow.In};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport { Item, ContactText, ContactBtn } from './ContactListItem.styled';\nimport { BsPersonFill, BsXLg } from 'react-icons/bs';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      <ContactText>\n        <BsPersonFill />\n        &nbsp;{name}: {number}\n      </ContactText>\n      <ContactBtn onClick={handleDelete}>\n        <BsXLg />\n      </ContactBtn>\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin: 0 auto;\n  padding: 10px;\n  max-width: 400px;\n\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.boxShadow.In};\n`;\n\nexport const Notice = styled.p`\n  display: inline-block;\n  padding: 4px 16px;\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.boxShadow.Out};\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { List, Notice } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.length === 0 ? (\n        <Notice>Contacts list is empty!</Notice>\n      ) : (\n        contacts.map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))\n      )}\n    </List>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Helmet } from 'react-helmet';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","normalizedFilter","toLowerCase","contact","name","includes","FormWrap","styled","Form","props","theme","borderRadius","boxShadow","In","Label","Out","Input","Field","Message","ErrorMessage","FormBtn","schema","yup","shape","required","trim","max","matches","number","initialValues","ContactForm","dispatch","useDispatch","useSelector","validationSchema","onSubmit","values","resetForm","find","option","alert","addContact","autoComplete","type","placeholder","component","Filter","onChange","evt","setFilter","target","value","Item","ContactText","ContactBtn","ContactListItem","id","onClick","deleteContact","List","Notice","ContactList","length","map","useEffect","fetchContacts","Helmet"],"sourceRoot":""}