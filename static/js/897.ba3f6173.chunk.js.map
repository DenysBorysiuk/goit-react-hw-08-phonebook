{"version":3,"file":"static/js/897.ba3f6173.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactsBar/ContactsBar.styled.jsx","components/ContactsBar/ContactsBar.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.4);\n  // z-index: 1200;\n  // backdrop-filter: blur(6px);\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 10px;\n  padding: 10px;\n  background-color: transparent;\n  cursor: pointer;\n  color: #8f9eb2;\n\n  border: none;\n  border-radius: 50px;\n\n  transition: color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: rgba(100, 135, 239, 0.8);\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Overlay, ModalContent, CloseBtn } from './Modal.styled';\nimport { BsXLg } from 'react-icons/bs';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalContent className=\"modalContent\">\n        <CloseBtn onClick={onClose}>\n          <BsXLg />\n        </CloseBtn>\n        {children}\n      </ModalContent>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FormWrap = styled.div`\n  background-color: #232f3d;\n  border-radius: 20px;\n  padding: 30px;\n\n  @media (min-width: 320px) {\n    width: 300px;\n  }\n\n  @media (min-width: 768px) {\n    width: 320px;\n  }\n\n  > h2 {\n    color: #8f9eb2;\n    text-align: center;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  color: #8f9eb2;\n\n  > input {\n    width: 100%;\n    border: none;\n    border-bottom: 1px solid #8f9eb2;\n    padding: 8px 4px;\n\n    background-color: transparent;\n    outline: transparent;\n    color: #8f9eb2;\n    transition: border-color 300ms ease-in-out;\n\n    &:focus,\n    &:not(:placeholder-shown) {\n      border-color: #fff;\n    }\n\n    &::placeholder {\n      color: transparent;\n      transition: color 300ms ease-in-out;\n    }\n\n    &:focus::placeholder {\n      color: #8f9eb2;\n    }\n\n    &:focus + span,\n    &:not(:placeholder-shown) + span {\n      color: #fff;\n      transform: translateY(-20px);\n    }\n  }\n\n  > span {\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    font-size: 18px;\n    transform-origin: top left;\n    transition: transform 300ms ease-in-out, color 300ms ease-in-out;\n  }\n\n  > p {\n    position: absolute;\n    bottom: -15px;\n    left: 50%;\n    width: 250px;\n    transform: translateX(-50%);\n    font-size: 12px;\n    color: tomato;\n    text-align: center;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  margin: 0 auto;\n  padding: 8px 16px;\n  border-radius: 20px;\n  border: 1px solid #8f9eb2;\n  background-color: transparent;\n  color: #8f9eb2;\n  font-weight: 500;\n  font-size: 16px;\n  transition: color 300ms ease-in-out, background-color 300ms ease-in-out;\n\n  &:hover {\n    border-color: #6487ef;\n    background-color: #6487ef;\n    color: #ddf2ff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, Label, FormBtn, FormWrap } from './ContactForm.styled';\nimport { BsPersonPlusFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nconst schema = yup\n  .object({\n    name: yup.string().min(3).required().trim(),\n    number: yup.string().min(3).required().trim(),\n  })\n  .required();\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = data => {\n    if (\n      contacts.find(\n        option => option.name.toLowerCase() === data.name.toLowerCase()\n      )\n    ) {\n      return alert(`${data.name} is already in contacts`);\n    }\n    dispatch(addContact(data));\n    reset();\n  };\n\n  return (\n    <FormWrap>\n      <h2>Contact</h2>\n      <Form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Label>\n          <input {...register('name')} placeholder=\"Enter contact name\" />\n          <span>Name</span>\n          {errors.name && <p>{errors.name.message}</p>}\n        </Label>\n        <Label>\n          <input {...register('number')} placeholder=\"Enter contact number\" />\n          <span>Number</span>\n          {errors.number && <p>{errors.number.message}</p>}\n        </Label>\n        <FormBtn type=\"submit\">\n          <BsPersonPlusFill />\n          &nbsp; Add contact\n        </FormBtn>\n      </Form>\n    </FormWrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin: 30px auto;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  max-width: 350px;\n  background-color: #232f3d;\n  color: #8f9eb2;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n  cursor: pointer;\n  border-radius: ${props => props.theme.borderRadius};\n\n  > span {\n    margin-left: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 8px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 8px 10px;\n  width: 80%;\n  color: #8f9eb2;\n  background-color: transparent;\n  border: 1px solid rgba(143, 158, 178, 0.5);\n  outline: none;\n  border-radius: ${props => props.theme.borderRadius};\n  transition: border-color 300ms ease-in-out;\n\n  &::placeholder {\n    text-align: center;\n    color: #8f9eb2;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: rgba(100, 135, 239, 0.8);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filtersSlice';\nimport { Label, Input } from './Filter.styled';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = evt => {\n    dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <Label>\n      <BsSearch />\n      <span>Find contacts by name</span>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        onChange={onChangeFilter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  padding: 4px 16px;\n  background-color: #232f3d;\n  border-radius: ${props => props.theme.borderRadius};\n`;\n\nexport const TextWrapper = styled.div`\n  margin-right: auto;\n`;\n\nexport const ContactName = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 8px;\n  font-size: 18px;\n  color: #8f9eb2;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 18px;\n  color: #8f9eb2;\n`;\n\nexport const ContactBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  background-color: transparent;\n  cursor: pointer;\n  color: #8f9eb2;\n\n  border: none;\n  border-radius: 50px;\n\n  transition: color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: rgba(100, 135, 239, 0.8);\n  }\n`;\n\nexport const Avatar = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  background-color: #ea2364;\n  border-radius: 50px;\n  width: 40px;\n  height: 40px;\n  border: none;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport {\n  Item,\n  ContactName,\n  ContactNumber,\n  ContactBtn,\n  Avatar,\n  TextWrapper,\n} from './ContactListItem.styled';\nimport { BsPersonFill, BsXLg, BsFillTelephoneFill } from 'react-icons/bs';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      <Avatar>A</Avatar>\n      <TextWrapper>\n        <ContactName>\n          <BsPersonFill />\n          {name}\n        </ContactName>\n        <ContactNumber>\n          <BsFillTelephoneFill size=\"14\" />\n          {number}\n        </ContactNumber>\n      </TextWrapper>\n      <ContactBtn onClick={handleDelete}>\n        <BsXLg />\n      </ContactBtn>\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin: 0 auto;\n  padding: 10px;\n  max-width: 350px;\n\n  border-radius: ${props => props.theme.borderRadius};\n`;\n\nexport const Notice = styled.p`\n  display: inline-block;\n  padding: 4px 16px;\n  text-align: center;\n  font-size: 18px;\n  color: #8f9eb2;\n  background-color: #232f3d;\n  border-radius: ${props => props.theme.borderRadius};\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { List, Notice } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.length === 0 ? (\n        <Notice>Contacts list is empty!</Notice>\n      ) : (\n        contacts.map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))\n      )}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  margin: 20px auto;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 350px;\n`;\n\nexport const AddBtn = styled.button`\n  padding: 8px 16px;\n  border-radius: 20px;\n  border: 1px solid #8f9eb2;\n  background-color: transparent;\n  color: #8f9eb2;\n  font-weight: 500;\n  font-size: 16px;\n  transition: color 300ms ease-in-out, background-color 300ms ease-in-out;\n\n  &:hover {\n    border-color: #6487ef;\n    background-color: #6487ef;\n    color: #ddf2ff;\n  }\n`;\n\nexport const Info = styled.p`\n  color: #8f9eb2;\n  font-weight: 500;\n  font-size: 16px;\n`;\n","import { Wrapper, AddBtn, Info } from './ContactsBar.styled';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactsBar = ({ onOpen }) => {\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Wrapper>\n      <Info>All: {contacts.length}</Info>\n      <AddBtn onClick={onOpen}>+ Add</AddBtn>\n    </Wrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Modal } from 'components/Modal/Modal';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Helmet } from 'react-helmet';\nimport { ContactsBar } from 'components/ContactsBar/ContactsBar';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 180px)',\n  },\n};\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => setShowModal(prevState => !prevState);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Filter />\n      <ContactsBar onOpen={toggleModal} />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <ContactForm />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","normalizedFilter","toLowerCase","contact","name","includes","Overlay","styled","_templateObject","_taggedTemplateLiteral","ModalContent","_templateObject2","CloseBtn","_templateObject3","modalRoot","document","querySelector","Modal","_ref","onClose","children","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","_jsx","onClick","currentTarget","target","_jsxs","className","BsXLg","FormWrap","Form","Label","FormBtn","_templateObject4","schema","yup","min","required","trim","number","ContactForm","dispatch","useDispatch","useSelector","_useForm","useForm","resolver","yupResolver","register","reset","handleSubmit","errors","formState","onSubmit","data","find","option","alert","concat","addContact","autoComplete","_objectSpread","placeholder","message","type","BsPersonPlusFill","props","theme","borderRadius","Input","Filter","BsSearch","onChange","evt","setFilter","value","Item","TextWrapper","ContactName","ContactNumber","ContactBtn","_templateObject5","Avatar","_templateObject6","ContactListItem","id","BsPersonFill","BsFillTelephoneFill","size","deleteContact","List","Notice","ContactList","length","map","Wrapper","AddBtn","Info","ContactsBar","onOpen","styles","container","minHeight","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","toggleModal","prevState","fetchContacts","style","Helmet"],"sourceRoot":""}